{"version":3,"sources":["redux/actions/auth.js","redux/actions/types.js","components/pacientes/Paciente.js","components/pacientes/PacienteLista.js","redux/actions/pacientes.js","components/pacientes/AgregarPaciente.js","containers/pacientes/Pacientes.js","containers/Home.js","containers/accounts/Login.js","containers/accounts/Signup.js","containers/accounts/Activate.js","containers/accounts/ResetPassword.js","containers/accounts/ResetPasswordConfirm.js","redux/reducers/auth.js","redux/reducers/pacientesReducer.js","redux/reducers/index.js","redux/store.js","components/Nav.js","hocs/Layout.js","App.js","index.js"],"names":["load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","Paciente","nombre","apellidoPaterno","email","PacienteLista","useDispatch","pacientes","useSelector","state","pacientesReducer","useEffect","then","catch","err","console","log","length","map","id","key","AgregarPaciente","useForm","register","handleSubmit","errors","user","auth","onSubmit","rut","apellidoMaterno","telefono","genero","direccion","comunaResidencia","ocupacionProfecion","userAccount","body","JSON","stringify","post","agregarPacientes","name","placeholder","ref","required","message","minLength","value","Pacientes","Home","className","to","role","connect","isAuthenticated","login","password","useState","formData","setFormData","onChange","e","target","preventDefault","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","reset_password","props","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","action","combineReducers","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","checkAuthenticated","code","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d571509.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'  \r\n            }           \r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};    \r\n\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};  \r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    };\r\n};\r\n    \r\nexport const logout = () => dispatch => {\r\n    dispatch ({\r\n        type: LOGOUT\r\n    });\r\n};","export const FETCH_PACIENTES_START = 'FETCH_PACIENTES';\r\nexport const FETCH_PACIENTES_SUCCESS = 'FETCH_PACIENTES_SUCCESS';\r\nexport const FETCH_PACIENTES_FAILURE = 'FETCH_PACIENTES_FAILURE';\r\nexport const ADD_PACIENTE_SUCCESS = 'ADD_PACIENTE_SUCCESS';\r\nexport const ADD_PACIENTE_FAILURE = 'ADD_PACIENTE_FAILURE';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Paciente = ({nombre, apellidoPaterno, email}) => {    \r\n    return(\r\n        <Fragment>\r\n            nombre: {nombre} apellido: {apellidoPaterno} email: {email}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Paciente\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPacientes } from '../../redux/actions/pacientes';\r\nimport { load_user } from '../../redux/actions/auth';\r\nimport Paciente from '../../components/pacientes/Paciente';\r\n\r\n\r\nconst PacienteLista = () => {\r\n    const dispatch = useDispatch();\r\n    const pacientes = useSelector(state => state.pacientesReducer.pacientes)\r\n\r\n    useEffect(() => {\r\n        load_user();\r\n        dispatch(fetchPacientes());\r\n    }, [dispatch])\r\n    \r\n    if (!pacientes || !pacientes.length) {\r\n        return (\r\n            <p>NO HAY PACIENTES</p>\r\n        ) \r\n    }\r\n    return (\r\n        <ul>\r\n            {pacientes.map(({ id, nombre, apellidoPaterno, email }) =>\r\n                <div key={id}>\r\n                    <Paciente \r\n                        nombre={nombre} \r\n                        apellidoPaterno={apellidoPaterno} \r\n                        email={email}\r\n                    />\r\n                </div>\r\n            )}\r\n        </ul>\r\n    ) \r\n}\r\n\r\nexport default PacienteLista;\r\n\r\n","import axios from 'axios';\r\nimport { \r\n    FETCH_PACIENTES_START, \r\n    FETCH_PACIENTES_SUCCESS, \r\n    FETCH_PACIENTES_FAILURE ,\r\n    ADD_PACIENTE_SUCCESS,\r\n    ADD_PACIENTE_FAILURE\r\n} from './types';\r\n\r\n\r\nexport const fetchPacientes = () => async dispatch => {\r\n    dispatch({ type: FETCH_PACIENTES_START });\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n\r\n    axios.get(`${process.env.REACT_APP_API_URL}/api/paciente/`, config)\r\n        .then(res => {\r\n            dispatch({\r\n                type: FETCH_PACIENTES_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch ({\r\n                type: FETCH_PACIENTES_FAILURE,\r\n            })\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nexport const agregarPacientes = (user, { rut, nombre, apellidoPaterno, apellidoMaterno, telefono, email, genero, direccion, comunaResidencia, ocupacionProfecion }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : `JWT ${localStorage.getItem('access')}`,\r\n            'Accept': 'application/json'\r\n        }\r\n    };\r\n    const { id:userAccount } = user\r\n    const body = JSON.stringify({ rut, nombre, apellidoPaterno, apellidoMaterno, telefono, email, genero, direccion, comunaResidencia, ocupacionProfecion, userAccount });\r\n    console.log('userAccount:', userAccount)\r\n    axios.post(`${process.env.REACT_APP_API_URL}/api/paciente/`, body, config)\r\n        .then(res =>{\r\n            dispatch({\r\n                type: ADD_PACIENTE_SUCCESS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch (err=>{\r\n            dispatch({\r\n                type: ADD_PACIENTE_FAILURE,\r\n                errors: err.data\r\n            });\r\n        }) \r\n} \r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { load_user } from '../../redux/actions/auth';\r\nimport { agregarPacientes } from '../../redux/actions/pacientes'\r\n\r\nconst AgregarPaciente = () => {\r\n    const {register, handleSubmit, errors} = useForm();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.auth.user)\r\n\r\n    useEffect(() => {\r\n        load_user(); //revisar que pasa si no esta logeado el usuario\r\n    }, [])\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(agregarPacientes(user, data))\r\n    };\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input \r\n                type=\"text\"\r\n                name=\"rut\" \r\n                placeholder=\"Rut\"\r\n                ref={register({\r\n                    required:'Campo \"Rut\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.rut && <p>{errors.rut.message}</p>} <br/>\r\n            <input\r\n                type=\"text\"\r\n                name=\"nombre\" \r\n                placeholder=\"Nombre\"\r\n                ref={register({\r\n                    required: 'Campo \"nombre\" obligatorio',\r\n                    minLength: {value: 2, message: 'campo \"nombre\" debe tener mas de 1 caracter'}\r\n                })}\r\n                /> <br/> {errors.nombre && <p>{errors.nombre.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"apellidoPaterno\" \r\n                placeholder=\"Apellido Paterno\"\r\n                ref={register({\r\n                    required:'Campo \"Apellido Paterno\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.apellidoPaterno && <p>{errors.apellidoPaterno.message}</p>} <br/>\r\n            <input \r\n                type=\"text\" \r\n                name=\"apellidoMaterno\" \r\n                placeholder=\"Apellido Materno\"\r\n                ref={register({\r\n                    required:'Campo \"Apellido Materno\" obligatorio',\r\n                    minLength: {value: 2, message: 'campo \"Apellido Materno\" debe tener mas de 1 caracter'}\r\n                })}\r\n                /> <br/> {errors.apellidoMaterno && <p>{errors.apellidoMaterno.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"telefono\" \r\n                placeholder=\"Telefono\"\r\n                ref={register({\r\n                    required:'Campo \"Telefono\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.telefono && <p>{errors.telefono.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"email\" \r\n                placeholder=\"Email\"\r\n                ref={register({\r\n                    required:'Campo \"Email\" obligatorio',\r\n                })}\r\n            /> <br/> {errors.email && <p>{errors.email.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"genero\" \r\n                placeholder=\"Genero\"\r\n                ref={register({\r\n                    required:'Campo \"Genero\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.genero && <p>{errors.genero.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"direccion\" \r\n                placeholder=\"Direccion\"\r\n                ref={register({\r\n                    required:'Campo \"Direccion\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.direccion && <p>{errors.direccion.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"comunaResidencia\" \r\n                placeholder=\"Comuna de residencia\"\r\n                ref={register({\r\n                    required:'Campo \"Comuna de residencia\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.comunaResidencia && <p>{errors.comunaResidencia.message}</p>} <br/>\r\n            <input \r\n                type=\"text\"\r\n                name=\"ocupacionProfecion\" \r\n                placeholder=\"Ocupacion o Profecion\"\r\n                ref={register({\r\n                    required:'Campo \"Ocupacion o Profecion\" obligatorio',\r\n                })}\r\n                /> <br/> {errors.ocupacionProfecion && <p>{errors.ocupacionProfecion.message}</p>} <br/>\r\n            <button>Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AgregarPaciente;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*        \r\nonSubmit\r\nsetPacientes(prevPacientes => [...prevPacientes, data])\r\n        fetch('http://127.0.0.1:8000/api/paciente/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => console.log('Response:', response)) */","import React, { Fragment }  from 'react';\r\nimport PacienteLista from '../../components/pacientes/PacienteLista';\r\nimport AgregarPaciente from '../../components/pacientes/AgregarPaciente';\r\n\r\nconst Pacientes = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Pacientes</h1>\r\n            <AgregarPaciente />\r\n            <PacienteLista />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Pacientes;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n    <div className='container'>\r\n        <div className='jumbotron mt-5'>\r\n            <h1 className='display-4'>Amülink</h1>\r\n            <p className='lead'>Desarrollo de Amülink</p>\r\n            <hr className='my-4' />\r\n            <p>Sistema de gestion de terapia</p>\r\n            <Link className='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/actions/auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {                \r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    \r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../../redux/actions/auth'\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => { \r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n    \r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n\r\n    if (accountCreated)\r\n        return <Redirect to='/login' />; \r\n    \r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../../redux/actions/auth'\r\n\r\nconst Activate = ({ verify, match }) => {                \r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../../redux/actions/auth'\r\n\r\nconst ResetPassword = (props) => {                \r\n    const [requestSent, setRequestSent] = useState(false);\r\n    \r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n    \r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n    \r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Your Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n    \r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../../redux/actions/auth'\r\n\r\nconst ResetPasswordConfirm = (props) => {                \r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n    \r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n            \r\n    if (requestSent)\r\n        return <Redirect to='/' />;\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);    ","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    FETCH_PACIENTES_SUCCESS, \r\n    FETCH_PACIENTES_FAILURE,\r\n    ADD_PACIENTE_SUCCESS,\r\n    ADD_PACIENTE_FAILURE \r\n} from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    pacientes: [],\r\n    errors: '',\r\n};\r\n\r\n\r\nconst pacientesReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_PACIENTES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pacientes: action.payload,\r\n                errors: ''\r\n            }\r\n        case FETCH_PACIENTES_FAILURE:\r\n            return {\r\n                ...state,\r\n                errors: action.payload,\r\n            }\r\n        case ADD_PACIENTE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pacientes: [...state.pacientes, action.payload],\r\n                errors:''\r\n            }\r\n        case ADD_PACIENTE_FAILURE:\r\n            return {\r\n                ...state,\r\n                errors: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pacientesReducer;\r\n\r\n\r\n\r\n\r\n/* import { combineReducers } from 'redux';\r\nimport pacientesReducer from './pacientesReducer';\r\n\r\nexport default combineReducers({\r\n    pacientes: pacientesReducer\r\n}); */","import { combineReducers } from 'redux';\r\nimport auth from './auth'\r\nimport pacientesReducer from './pacientesReducer'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    pacientesReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)) \r\n);\r\n\r\nexport default store;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../redux/actions/auth';\r\n\r\nconst Nav = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/login'>Login</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n            <li className='nav-item'>\r\n                <a className='nav-link' href='#!' onClick={logout}>Logout</a>\r\n            </li>\r\n    );\r\n\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <Link className='navbar-brand' to='/'>Navbar</Link>\r\n            <button \r\n                className='navbar-toggler' \r\n                type='button' \r\n                data-toggle='collapse' \r\n                data-target='#navbarNav' \r\n                aria-controls='navbarNav' \r\n                aria-expanded='false' \r\n                aria-label='Toggle navigation'\r\n            >\r\n                <span className='navbar-toggler-icon'></span>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNav'>\r\n                <ul className='navbar-nav'>\r\n                    <li className='nav-item active'>\r\n                        <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\r\n                    </li>\r\n                    {isAuthenticated ? authLinks() : guestLinks()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout } )(Nav);","import React, { useEffect } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../redux/actions/auth'\r\n\r\nconst Layout = (props) => {\r\n    const {checkAuthenticated, load_user} = props\r\n    useEffect(() => {\r\n        checkAuthenticated();\r\n        load_user();\r\n    }, [checkAuthenticated, load_user])\r\n\r\n    return(\r\n        <div>\r\n            <Nav />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React from 'react'; \nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Pacientes from './containers/pacientes/Pacientes';\n\nimport Home from './containers/Home';\nimport Login from './containers/accounts/Login';\nimport Signup  from './containers/accounts/Signup';\nimport Activate from './containers/accounts/Activate';\nimport ResetPassword from './containers/accounts/ResetPassword';\nimport ResetPasswordConfirm from './containers/accounts/ResetPasswordConfirm';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Layout from './hocs/Layout';\n\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/pacientes' component={Pacientes} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}