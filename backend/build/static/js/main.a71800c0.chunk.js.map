{"version":3,"sources":["redux/actions/auth.js","redux/actions/types.js","components/Nav.js","components/pacientes/PacienteLista.js","redux/actions/index.js","containers/Pacientes.js","components/cuentas/FormularioRegistro.js","containers/Registro.js","containers/Home.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","redux/reducers/auth.js","redux/reducers/index.js","redux/store.js","hocs/Layout.js","App.js","index.js"],"names":["load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","process","res","type","payload","data","connect","state","isAuthenticated","auth","logout","className","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","PacienteLista","useDispatch","useSelector","loading","pacientes","errors","useEffect","then","catch","err","message","map","paciente","key","nombre","apellidoPaterno","Pacientes","FormularioRegistro","useForm","register","handleSubmit","onSubmit","fetch","method","body","JSON","stringify","json","error","console","response","log","name","placeholder","ref","required","rut","Registro","Home","class","role","login","email","password","post","useState","formData","setFormData","onChange","e","target","value","preventDefault","minLength","signup","re_password","accountCreated","setAccountCreated","verify","uid","token","match","verified","setVerified","style","marginTop","params","reset_password","props","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","logger","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","checkAuthenticated","code","children","App","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71800c0.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'  \r\n            }           \r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};    \r\n\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};  \r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    };\r\n};\r\n    \r\nexport const logout = () => dispatch => {\r\n    dispatch ({\r\n        type: LOGOUT\r\n    });\r\n};","export const FETCH_PACIENTES_START = 'FETCH_PACIENTES';\r\nexport const FETCH_PACIENTES_SUCCESS = 'FETCH_PACIENTES_SUCCESS';\r\nexport const FETCH_PACIENTES_FAILURE = 'FETCH_PACIENTES_FAILURE';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../redux/actions/auth';\r\n\r\nconst Nav = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/login'>Login</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n            <li className='nav-item'>\r\n                <a className='nav-link' href='#!' onClick={logout}>Logout</a>\r\n            </li>\r\n    );\r\n\r\n\r\n    return (\r\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\r\n            <Link className='navbar-brand' to='/'>Navbar</Link>\r\n            <button \r\n                className='navbar-toggler' \r\n                type='button' \r\n                data-toggle='collapse' \r\n                data-target='#navbarNav' \r\n                aria-controls='navbarNav' \r\n                aria-expanded='false' \r\n                aria-label='Toggle navigation'\r\n            >\r\n                <span className='navbar-toggler-icon'></span>\r\n            </button>\r\n            <div className='collapse navbar-collapse' id='navbarNav'>\r\n                <ul className='navbar-nav'>\r\n                    <li className='nav-item active'>\r\n                        <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\r\n                    </li>\r\n                    {isAuthenticated ? authLinks() : guestLinks()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout } )(Nav);","import React, { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPacientes } from '../../redux/actions';\r\n\r\n\r\nconst PacienteLista = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, pacientes, errors } = useSelector(state => state);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPacientes())\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            { loading ? 'Cargando pacientes...' : pacientes.map((paciente) => {\r\n                return (\r\n                    <div key={paciente.id}>\r\n                        <p>\r\n                            {paciente.nombre} {paciente.apellidoPaterno}\r\n                        </p>\r\n                    </div>\r\n                )\r\n            })}\r\n            {errors ? <p>{errors}</p> : <></>}\r\n        </Fragment>\r\n    ) \r\n}\r\n\r\nexport default PacienteLista;\r\n\r\n","import { FETCH_PACIENTES_START, FETCH_PACIENTES_SUCCESS, FETCH_PACIENTES_FAILURE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchPacientes = () => dispatch => {\r\n    dispatch({ type: FETCH_PACIENTES_START });\r\n    axios\r\n        .get('http://127.0.0.1:8000/api/paciente')\r\n        .then(res => {\r\n            dispatch({ type: FETCH_PACIENTES_SUCCESS, payload: res.data})\r\n        }).catch(err => dispatch({ type: FETCH_PACIENTES_FAILURE, payload: err.message }));\r\n};\r\n","import React, { Fragment }  from 'react';\r\nimport Nav from '../components/Nav';\r\n/* import AgregarPaciente from '../components/pacientes/AgregarPaciente' */\r\nimport PacienteLista from '../components/pacientes/PacienteLista';\r\n\r\nconst Pacientes = () => {\r\n    return (\r\n        <Fragment>\r\n            <Nav />\r\n{/*                <AgregarPaciente /> */}\r\n            <PacienteLista />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Pacientes;","import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst FormularioRegistro = () => {\r\n    const { register, handleSubmit, errors } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        fetch('http://127.0.0.1:8000/api/cuenta/register', {\r\n            method:'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json())\r\n        .catch(error => console.error('Error', error))\r\n        .then(response => console.log ('Response:', response))\r\n    };\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                ref={register({\r\n                    required: 'Campo \"Email\" requerido',\r\n                })}\r\n            /> <br/> {errors.rut && <p>{errors.rut.message}</p>} <br/>\r\n            <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Nombre de Usuario\"\r\n                ref={register({\r\n                    required: 'Campo \"Nombre de Usuario\" requerido',\r\n                })}\r\n            /> <br/> {errors.rut && <p>{errors.rut.message}</p>} <br/>\r\n            <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                ref={register({\r\n                    required: 'Campo \"Password\" requerido',\r\n                })}\r\n            /> <br/> {errors.rut && <p>{errors.rut.message}</p>} <br/>\r\n            <input\r\n                type=\"password\"\r\n                name=\"password2\"\r\n                placeholder=\"Confirmacion Password\"\r\n                ref={register({\r\n                    required: 'Campo \"Confirmacion Password\" requerido',\r\n                })}\r\n            /> <br/> {errors.rut && <p>{errors.rut.message}</p>} <br/>\r\n            <button>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default FormularioRegistro;","import React, { Fragment } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport FormularioRegistro from '../components/cuentas/FormularioRegistro';\r\n\r\nconst Registro = () => {\r\n    return (\r\n        <Fragment>\r\n            <Nav />\r\n            <h3>Registro</h3> <br/>\r\n            <FormularioRegistro />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Registro;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n    <div className='container'>\r\n        <div class='jumbotron mt-5'>\r\n            <h1 class='display-4'>Amülink</h1>\r\n            <p class='lead'>Desarrollo de Amülink</p>\r\n            <hr class='my-4' />\r\n            <p>Sistema de gestion de terapia</p>\r\n            <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../redux/actions/auth'\r\n\r\nconst Login = ({ login, isAuthenticated }) => {                \r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    \r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../redux/actions/auth'\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => { \r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n    \r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/' />;\r\n\r\n    if (accountCreated)\r\n        return <Redirect to='/login' />; \r\n    \r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Password*'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        name='re_password'\r\n                        value={re_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already have an account? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../redux/actions/auth'\r\n\r\nconst Activate = ({ verify, match }) => {                \r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    if (verified)\r\n        return <Redirect to='/' />;\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div \r\n                className='d-flex flex-column justify-content-center align-items-center'\r\n                style={{ marginTop: '200px' }}\r\n            >\r\n                <h1>Verify your Account</h1>\r\n                <button\r\n                    onClick={verify_account}\r\n                    style={{ marginTop: '50px' }}\r\n                    type='button'\r\n                    className='btn btn-primary'\r\n                >\r\n                    Verify\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../redux/actions/auth'\r\n\r\nconst ResetPassword = (props) => {                \r\n    const [requestSent, setRequestSent] = useState(false);\r\n    \r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n    \r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n    \r\n    if (requestSent)\r\n        return <Redirect to='/' />\r\n    return (\r\n        <div className='container mt-5'>\r\n            <h1>Request Password Reset:</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Your Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n    \r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../redux/actions/auth'\r\n\r\nconst ResetPasswordConfirm = (props) => {                \r\n    const [requestSent, setRequestSent] = useState(false);\r\n\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n    \r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const uid = props.match.params.uid;\r\n        const token = props.match.params.token;\r\n\r\n        props.reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n            \r\n    if (requestSent)\r\n        return <Redirect to='/' />;\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='New Password'\r\n                        name='new_password'\r\n                        value={new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Confirm New Password'\r\n                        name='re_new_password'\r\n                        value={re_new_password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength='6'\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);    ","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return{\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport auth from './auth'\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport pacientesReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk, logger]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)) \r\n);\r\n\r\nexport default store;","import React, { useEffect } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../redux/actions/auth'\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            <Nav />\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import React from 'react'; \nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Pacientes from './containers/Pacientes';\nimport Registro from './containers/Registro';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup  from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Layout from './hocs/Layout';\n\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/pacientes' component={Pacientes} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                    <Route exact path='/registro' component={Registro} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}